

CREATE OR REPLACE TRIGGER TRG_AF_TURNO_PLANILLA_AI
AFTER INSERT ON ACS_TURNO_PLANILLA
FOR EACH ROW
DECLARE
  v_anio NUMBER;
  v_mes  NUMBER;
  v_acm  NUMBER;
BEGIN
  SELECT p.APL_PERIODO_ANIO, p.APL_PERIODO_MES
    INTO v_anio, v_mes
    FROM ACS_DETALLE_PLANILLA d
    JOIN ACS_PLANILLA p ON p.APL_ID = d.APL_ID
   WHERE d.ADP_ID = :NEW.ADP_ID;

  INSERT INTO ACS_ASIENTO_FINANCIERO (AAF_TIPO, AAF_FUENTE, AAF_MONTO, AAF_PERIODO_ANIO, AAF_PERIODO_MES, ACM_ID, AAF_CREADO_EN)
  VALUES ('INGRESO','TURNO', NVL(:NEW.MONTO_COBRADO_CENTRO,0), v_anio, v_mes, v_acm, SYSTIMESTAMP);

  INSERT INTO ACS_ASIENTO_FINANCIERO (AAF_TIPO, AAF_FUENTE, AAF_MONTO, AAF_PERIODO_ANIO, AAF_PERIODO_MES, ACM_ID, AAF_CREADO_EN)
  VALUES ('GASTO','TURNO', NVL(:NEW.MONTO_PAGADO_MEDICO,0), v_anio, v_mes, v_acm, SYSTIMESTAMP);
END;
/



CREATE OR REPLACE TRIGGER TRG_AF_PROC_PLANILLA_AI
AFTER INSERT ON ACS_PROCEDIMIENTO_PLANILLA
FOR EACH ROW
DECLARE
  v_anio NUMBER;
  v_mes  NUMBER;
BEGIN
  SELECT p.APL_PERIODO_ANIO, p.APL_PERIODO_MES
    INTO v_anio, v_mes
    FROM ACS_DETALLE_PLANILLA d
    JOIN ACS_PLANILLA p ON p.APL_ID = d.APL_ID
   WHERE d.ADP_ID = :NEW.ADP_ID;

  INSERT INTO ACS_ASIENTO_FINANCIERO (AAF_TIPO, AAF_FUENTE, AAF_MONTO, AAF_PERIODO_ANIO, AAF_PERIODO_MES, ACM_ID, AAF_CREADO_EN)
  VALUES ('INGRESO','PROCEDIMIENTO', NVL(:NEW.MONTO_COBRADO,0), v_anio, v_mes, :NEW.ACM_ID, SYSTIMESTAMP);

  INSERT INTO ACS_ASIENTO_FINANCIERO (AAF_TIPO, AAF_FUENTE, AAF_MONTO, AAF_PERIODO_ANIO, AAF_PERIODO_MES, ACM_ID, AAF_CREADO_EN)
  VALUES ('GASTO','PROCEDIMIENTO', NVL(:NEW.MONTO_PAGADO_MEDICO,0), v_anio, v_mes, :NEW.ACM_ID, SYSTIMESTAMP);
END;
/



CREATE OR REPLACE TRIGGER TRG_AF_PLANILLA_PROCESADA_AU
AFTER UPDATE OF APL_ESTADO ON ACS_PLANILLA
FOR EACH ROW
DECLARE
  v_monto NUMBER;
  v_fuente VARCHAR2(20);
  v_aplica VARCHAR2(20);
BEGIN
  IF :NEW.APL_ESTADO = 'PROCESADA' THEN
    SELECT NVL(SUM(NETO),0) INTO v_monto
    FROM ACS_DETALLE_PLANILLA
    WHERE APL_ID = :NEW.APL_ID;

    SELECT tp.ATP_APLICA_A INTO v_aplica
    FROM ACS_TIPO_PLANILLA tp
    WHERE tp.ATP_ID = :NEW.ATP_ID;

    v_fuente := CASE WHEN v_aplica='ADMINISTRATIVO' THEN 'PLANILLA_ADMIN' ELSE 'PLANILLA_MEDICA' END;

    INSERT INTO ACS_ASIENTO_FINANCIERO (AAF_TIPO, AAF_FUENTE, AAF_MONTO, AAF_PERIODO_ANIO, AAF_PERIODO_MES, ACM_ID, AAF_CREADO_EN)
    VALUES ('GASTO', v_fuente, v_monto, :NEW.APL_PERIODO_ANIO, :NEW.APL_PERIODO_MES, NULL, SYSTIMESTAMP);
  END IF;
END;
/



CREATE OR REPLACE TRIGGER TRG_RESUMEN_FIN_CENTRO_AI
AFTER INSERT ON ACS_ASIENTO_FINANCIERO
FOR EACH ROW
BEGIN
  IF :NEW.ACM_ID IS NOT NULL THEN
    MERGE INTO ACS_RESUMEN_FIN_CENTRO_MES t
    USING (SELECT :NEW.ACM_ID ACM_ID, :NEW.AAF_PERIODO_ANIO ANIO, :NEW.AAF_PERIODO_MES MES FROM DUAL) s
       ON (t.ACM_ID = s.ACM_ID AND t.ARCM_PERIODO_ANIO = s.ANIO AND t.ARCM_PERIODO_MES = s.MES)
     WHEN NOT MATCHED THEN
       INSERT (ACM_ID, ARCM_PERIODO_ANIO, ARCM_PERIODO_MES, ARCM_INGRESOS, ARCM_GASTOS, ARCM_UTILIDAD)
       VALUES (s.ACM_ID, s.ANIO, s.MES, 0, 0, 0)
     WHEN MATCHED THEN
       UPDATE SET
         ARCM_INGRESOS = NVL(ARCM_INGRESOS,0) + CASE WHEN :NEW.AAF_TIPO='INGRESO' THEN :NEW.AAF_MONTO ELSE 0 END,
         ARCM_GASTOS   = NVL(ARCM_GASTOS,0)   + CASE WHEN :NEW.AAF_TIPO='GASTO'   THEN :NEW.AAF_MONTO ELSE 0 END,
         ARCM_UTILIDAD = (NVL(ARCM_INGRESOS,0) + CASE WHEN :NEW.AAF_TIPO='INGRESO' THEN :NEW.AAF_MONTO ELSE 0 END)
                       - (NVL(ARCM_GASTOS,0)   + CASE WHEN :NEW.AAF_TIPO='GASTO'   THEN :NEW.AAF_MONTO ELSE 0 END);
  END IF;
END;
/



CREATE OR REPLACE TRIGGER TRG_RESUMEN_FIN_MENSUAL_AI
AFTER INSERT ON ACS_ASIENTO_FINANCIERO
FOR EACH ROW
BEGIN
  MERGE INTO ACS_RESUMEN_FIN_MENSUAL t
  USING (SELECT :NEW.AAF_PERIODO_ANIO ANIO, :NEW.AAF_PERIODO_MES MES FROM DUAL) s
     ON (t.ARM_PERIODO_ANIO = s.ANIO AND t.ARM_PERIODO_MES = s.MES)
   WHEN NOT MATCHED THEN
     INSERT (ARM_PERIODO_ANIO, ARM_PERIODO_MES, ARM_INGRESOS, ARM_GASTOS, ARM_UTILIDAD)
     VALUES (s.ANIO, s.MES, 0, 0, 0)
   WHEN MATCHED THEN
     UPDATE SET
       ARM_INGRESOS = NVL(ARM_INGRESOS,0) + CASE WHEN :NEW.AAF_TIPO='INGRESO' THEN :NEW.AAF_MONTO ELSE 0 END,
       ARM_GASTOS   = NVL(ARM_GASTOS,0)   + CASE WHEN :NEW.AAF_TIPO='GASTO'   THEN :NEW.AAF_MONTO ELSE 0 END,
       ARM_UTILIDAD = (NVL(ARM_INGRESOS,0) + CASE WHEN :NEW.AAF_TIPO='INGRESO' THEN :NEW.AAF_MONTO ELSE 0 END)
                   - (NVL(ARM_GASTOS,0)   + CASE WHEN :NEW.AAF_TIPO='GASTO'   THEN :NEW.AAF_MONTO ELSE 0 END);
END;
/
