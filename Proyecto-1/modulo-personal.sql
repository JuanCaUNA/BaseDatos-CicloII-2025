-- * Modulo de Personal *
-- * ------------------

-- ! TABLA
create table  asc_permiso (
   permiso_id  number generated by default as identity primary key,

   pantalla    varchar2(255) unique,

   lectura     number(1) default 0,
   creación    number(1) default 0,
   escritura   number(1) default 0,
   eliminacion number(1) default 0,

   tipo_usuario varchar2(20) check ( tipo_usuario in ( 'MEDICO', 'ADMINISTRATIVO' ) ) unique,
);

-- * Comentarios descriptivos
COMMENT ON TABLE asc_permiso IS 'Permisos de acceso por tipo de usuario';

-- ! TABLA
create table  asc_prerregistro (
   prerregistro_id   number generated by default as identity primary key,

   cedula            varchar2(20) unique,
   nombre            varchar2(100),
   apellidos         varchar2(100),
   fecha_nacimiento  date,

   sexo              varchar2(10), check ( sexo in ( 'MACULINO', 'FEMENINO', 'OTRO' ) ),
   estado_civil      varchar2(20), check ( tipo_nacionalidad in ( 'SOLTERO', 'CASADO', 'DIVORCIADO', 'VIUDO' ) ),
   tipo_nacionalidad varchar2(20) check ( tipo_nacionalidad in ( 'NACIONAL', 'EXTRANJERO' ) ),

   residencia        varchar2(255),
   email             varchar2(255) unique,
   telefono          varchar2(20),
   direccion_casa    varchar2(255),
   direccion_trabajo varchar2(255),

   estado_registro   varchar2(20) default 'PENDIENTE' check ( estado_registro in ( 'PENDIENTE', 'APROBADO', 'RECHAZADO' ) )

   -- Auditoria
   fecha_creacion   date default sysdate
);

-- * Comentarios descriptivos
COMMENT ON TABLE asc_prerregistro IS 'Datos de solicitantes a ser usuarios';
COMMENT ON COLUMN asc_prerregistro.residencia IS 'Lugar general donde vive';
COMMENT ON COLUMN asc_prerregistro.direccion_casa IS 'Dirección específica de la casa';
COMMENT ON COLUMN asc_prerregistro.direccion_trabajo IS 'Dirección específica del trabajo';
COMMENT ON COLUMN asc_prerregistro.estado_registro IS 'Al cambiar de estado, se debe crear el usuario o rechazar la solicitud. luego se borra el registro';

-- ! TABLA
create table  asc_usuario (
   usuario_id        number generated by default as identity primary key,

   -- datos de persona
   cedula            varchar2(20) unique,
   nombre            varchar2(100),
   apellidos         varchar2(100),
   fecha_nacimiento  date,

   -- tipos
   sexo              varchar2(10), check ( sexo in ( 'MACULINO', 'FEMENINO', 'OTRO' ) ),
   estado_civil      varchar2(20), check ( tipo_nacionalidad in ( 'SOLTERO', 'CASADO', 'DIVORCIADO', 'VIUDO' ) ),
   tipo_nacionalidad varchar2(20) check ( tipo_nacionalidad in ( 'NACIONAL', 'EXTRANJERO' ) ),
   tipo_usuario      varchar2(20) check ( tipo_usuario in ( 'MEDICO', 'ADMINISTRATIVO' ) ),

   -- coctacto
   email             varchar2(255) unique,
   telefono          varchar2(20),
   residencia        varchar2(255),
   direccion_casa    varchar2(255),
   direccion_trabajo varchar2(255)

   -- Auditoria
   fecha_creacion   date default sysdate
   fecha_modificacion date
);

-- * Índices
CREATE INDEX idx_ ON asc_usuario (cedula);
CREATE INDEX idx_nombre_completo ON asc_usuario (nombre, apellidos);
CREATE INDEX inx_tipo_usuario ON asc_usuario (tipo_usuario);

-- * Comentarios descriptivos
COMMENT ON TABLE asc_usuario IS 'Datos de usuario';
COMMENT ON COLUMN asc_usuario.residencia IS 'Lugar general donde vive';
COMMENT ON COLUMN asc_usuario.direccion_casa IS 'Dirección específica de la casa';
COMMENT ON COLUMN asc_usuario.direccion_trabajo IS 'Dirección específica del trabajo';
COMMENT ON COLUMN asc_usuario.tipo_usuario IS 'Define el perfil del usuario, se debe crear el perfil correspondiente con el misnmo id de usuario';

-- ! TABLA
create table  asc_banco (
   banco_id   number generated by default as identity primary key,

   nombre     varchar2(100) unique,

   direccion  varchar2(255),
   telefono   varchar2(20)
);

-- ! TABLA
create table  asc_cuenta_bancaria (
   cuentabancaria_id number generated by default as identity primary key,

   numero            varchar2(50) unique,
   titular           varchar2(200),
   tipo_cuenta       varchar2(20) check ( tipo_cuenta in ( 'AHORROS', 'CORRIENTE' ) ),
   es_principal      number(1),

   -- Relation
   banco_id         number,
   usuario_id        number,

   constraint fk_cuenta_bancaria_banco foreign key ( banco_id )
      references asc_banco ( banco_id ),

   constraint fk_cuenta_bancaria_usuario foreign key ( usuario_id )
      references asc_usuario ( usuario_id )
);

-- ! TABLA
create table  asc_medico (
   medico_id  primary key,

   estado     varchar2(20) default 'ACTIVO' check ( estado in ( 'ACTIVO', 'INACTIVO' ) ),

   -- Relation
   usuario_id number unique,

   constraint fk_medico_usuario foreign key ( usuario_id )
      references asc_usuario ( usuario_id )
);

-- * Comentarios descriptivos
COMMENT ON COLUMN asc_medico.medico_id IS 'El id del médico es el mismo que el id del usuario asociado';

-- ! TABLA
create table  asc_administrativo (
   administrativo_id primary key,

   estado            varchar2(20) default 'ACTIVO' check ( estado in ( 'ACTIVO', 'INACTIVO' ) ),

   -- Relation
   usuario_id        number unique,

   constraint fk_administrativo_usuario foreign key ( usuario_id )
      references asc_usuario ( usuario_id )
);

-- * Comentarios descriptivos
COMMENT ON COLUMN asc_administrativo.administrativo_id IS 'El id del administrativo es el mismo que el id del usuario asociado';

-- ! TABLA
create table  asc_detalle_documento (
   detalle_documento_id  number generated by default as identity primary key,

   tipo_usuario          varchar2(20) check ( tipo_usuario in ( 'MEDICO', 'ADMINISTRATIVO' ) ) unique,
   documentos_requeridos varchar2(4000)
);

-- * Comentarios descriptivos
COMMENT ON TABLE asc_detalle_documento IS 'Documentos requeridos por tipo de usuario, separados por comas';

-- ! TABLA
create table  asc_documento (
   documento_id      number generated by default as identity primary key,

   url               varchar2(1000) unique,
   descripcion       varchar2(4000),

   -- Relation
   usuario_id        number unique,
);

-- * Comentarios descriptivos
COMMENT ON TABLE asc_documento IS 'Documentos subidos por los usuarios, relacionados con su';

-- * end Modulo de Personal *
-- * ------------------