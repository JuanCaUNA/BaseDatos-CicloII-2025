-- * MODULO DE PERSONAL *
-- * ------------------


-- ! NOTAS: ESTANDARES;
-- ACS NOMBRE DE LA EMPRESA
-- NOMBRES DE TABLAS: ACS_<NOMBRE>
--                    LIMITE DE LARGO: 30 CARACTERES
-- NOMBRES DE COLUMNAS:
--                      LIMITE DE LARGO: 30 CARACTERES

-- ! TABLA
CREATE TABLE ACS_PERMISO (
   APE_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY,
   APE_PANTALLA  VARCHAR2(255),
   APE_LECTURA   NUMBER(1) DEFAULT 0,
   APE_CREACION  NUMBER(1) DEFAULT 0,
   APE_ESCRITURA NUMBER(1) DEFAULT 0,
   APE_ELIMINACION NUMBER(1) DEFAULT 0,
   APE_TIPO_USUARIO VARCHAR2(20),
   
   CONSTRAINT PK_ACS_PERMISO PRIMARY KEY (APE_ID),
   CONSTRAINT UK_ACS_PERMISO_PANTALLA UNIQUE (APE_PANTALLA),
   CONSTRAINT UK_ACS_PERMISO_TIPO_USR UNIQUE (APE_TIPO_USUARIO),
   CONSTRAINT CK_ACS_PERMISO_TIPO_USR CHECK (APE_TIPO_USUARIO IN ('MEDICO', 'ADMINISTRATIVO'))
);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON TABLE ACS_PERMISO IS 'PERMISOS DE ACCESO POR TIPO DE USUARIO';

-- ! TABLA
CREATE TABLE ACS_PRERREGISTRO (
   APR_ID             NUMBER GENERATED BY DEFAULT AS IDENTITY,
   APR_CEDULA         VARCHAR2(20) NOT NULL,
   APR_NOMBRE         VARCHAR2(100) NOT NULL,
   APR_APELLIDOS      VARCHAR2(100) NOT NULL,
   APR_FECHA_NACIMIENTO DATE,
   APR_SEXO           VARCHAR2(10),
   APR_ESTADO_CIVIL   VARCHAR2(20),
   APR_TIPO_NACIONALIDAD VARCHAR2(20),
   APR_TIPO_USUARIO   VARCHAR2(20),
   APR_RESIDENCIA     VARCHAR2(255),
   APR_EMAIL          VARCHAR2(255),
   APR_TELEFONO       VARCHAR2(20),
   APR_DIRECCION_CASA VARCHAR2(255),
   APR_DIRECCION_TRABAJO VARCHAR2(255),
   APR_ESTADO_REGISTRO VARCHAR2(20) DEFAULT 'PENDIENTE',
   APR_FECHA_CREACION DATE DEFAULT SYSDATE,
   
   CONSTRAINT PK_ACS_PRERREGISTRO PRIMARY KEY (APR_ID),
   CONSTRAINT UK_APR_CEDULA UNIQUE (APR_CEDULA),
   CONSTRAINT UK_APR_EMAIL UNIQUE (APR_EMAIL),
   CONSTRAINT CK_APR_SEXO CHECK (APR_SEXO IN ('MACULINO', 'FEMENINO', 'OTRO')),
   CONSTRAINT CK_APR_ESTADO_CIVIL CHECK (APR_ESTADO_CIVIL IN ('SOLTERO', 'CASADO', 'DIVORCIADO', 'VIUDO')),
   CONSTRAINT CK_APR_TIPO_NACIONALIDAD CHECK (APR_TIPO_NACIONALIDAD IN ('NACIONAL', 'EXTRANJERO')),
   CONSTRAINT CK_APR_TIPO_USUARIO CHECK (APR_TIPO_USUARIO IN ('MEDICO', 'ADMINISTRATIVO')),
   CONSTRAINT CK_APR_ESTADO_REGISTRO CHECK (APR_ESTADO_REGISTRO IN ('PENDIENTE', 'APROBADO', 'RECHAZADO'))
);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON TABLE ACS_PRERREGISTRO IS 'DATOS DE SOLICITANTES A SER USUARIOS, AL ACEPTAR SE DEBE DEFINIR EL TIPO DE USUARIO';
COMMENT ON COLUMN ACS_PRERREGISTRO.APR_RESIDENCIA IS 'LUGAR GENERAL DONDE VIVE';
COMMENT ON COLUMN ACS_PRERREGISTRO.APR_DIRECCION_CASA IS 'DIRECCIÓN ESPECÍFICA DE LA CASA';
COMMENT ON COLUMN ACS_PRERREGISTRO.APR_DIRECCION_TRABAJO IS 'DIRECCIÓN ESPECÍFICA DEL TRABAJO';
COMMENT ON COLUMN ACS_PRERREGISTRO.APR_ESTADO_REGISTRO IS 'AL CAMBIAR DE ESTADO, SE DEBE CREAR EL USUARIO O RECHAZAR LA SOLICITUD. LUEGO SE BORRA EL REGISTRO';

-- ! TABLA
CREATE TABLE ACS_USUARIO (
   AUS_ID             NUMBER GENERATED BY DEFAULT AS IDENTITY,
   AUS_CEDULA         VARCHAR2(20) NOT NULL,
   AUS_NOMBRE         VARCHAR2(100) NOT NULL,
   AUS_APELLIDOS      VARCHAR2(100) NOT NULL,
   AUS_FECHA_NACIMIENTO DATE,
   AUS_SEXO           VARCHAR2(10),
   AUS_ESTADO_CIVIL   VARCHAR2(20),
   AUS_TIPO_NACIONALIDAD VARCHAR2(20),
   AUS_TIPO_USUARIO   VARCHAR2(20) NOT NULL,
   AUS_EMAIL          VARCHAR2(255),
   AUS_TELEFONO       VARCHAR2(20),
   AUS_RESIDENCIA     VARCHAR2(255),
   AUS_DIRECCION_CASA VARCHAR2(255),
   AUS_DIRECCION_TRABAJO VARCHAR2(255),
   AUS_FECHA_CREACION DATE DEFAULT SYSDATE,
   AUS_FECHA_MODIFICACION DATE,
   
   CONSTRAINT PK_ACS_USUARIO PRIMARY KEY (AUS_ID),
   CONSTRAINT UK_AUS_CEDULA UNIQUE (AUS_CEDULA),
   CONSTRAINT UK_AUS_EMAIL UNIQUE (AUS_EMAIL),
   CONSTRAINT CK_AUS_SEXO CHECK (AUS_SEXO IN ('MACULINO', 'FEMENINO', 'OTRO')),
   CONSTRAINT CK_AUS_ESTADO_CIVIL CHECK (AUS_ESTADO_CIVIL IN ('SOLTERO', 'CASADO', 'DIVORCIADO', 'VIUDO')),
   CONSTRAINT CK_AUS_TIPO_NACIONALIDAD CHECK (AUS_TIPO_NACIONALIDAD IN ('NACIONAL', 'EXTRANJERO')),
   CONSTRAINT CK_AUS_TIPO_USUARIO CHECK (AUS_TIPO_USUARIO IN ('MEDICO', 'ADMINISTRATIVO'))
);

-- * ÍNDICES
CREATE INDEX IDX_AUS_NOMBRE_COMPLETO ON ACS_USUARIO (AUS_NOMBRE, AUS_APELLIDOS);
CREATE INDEX IDX_AUS_TIPO_USUARIO ON ACS_USUARIO (AUS_TIPO_USUARIO);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON TABLE ACS_USUARIO IS 'DATOS DE USUARIO';
COMMENT ON COLUMN ACS_USUARIO.AUS_RESIDENCIA IS 'LUGAR GENERAL DONDE VIVE';
COMMENT ON COLUMN ACS_USUARIO.AUS_DIRECCION_CASA IS 'DIRECCIÓN ESPECÍFICA DE LA CASA';
COMMENT ON COLUMN ACS_USUARIO.AUS_DIRECCION_TRABAJO IS 'DIRECCIÓN ESPECÍFICA DEL TRABAJO';
COMMENT ON COLUMN ACS_USUARIO.AUS_TIPO_USUARIO IS 'DEFINE EL PERFIL DEL USUARIO, SE DEBE CREAR EL PERFIL CORRESPONDIENTE CON EL MISNMO ID DE USUARIO, NO SE PUEDE CAMBIAR';

-- ! TABLA
CREATE TABLE ACS_BANCO (
   ABA_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY,
   ABA_NOMBRE  VARCHAR2(100),
   ABA_DIRECCION VARCHAR2(255),
   ABA_TELEFONO VARCHAR2(20),
   
   CONSTRAINT PK_ACS_BANCO PRIMARY KEY (ABA_ID),
   CONSTRAINT UK_ACS_BANCO_NOMBRE UNIQUE (ABA_NOMBRE)
);

-- ! TABLA
CREATE TABLE ACS_CUENTA_BANCARIA (
   ACU_ID           NUMBER GENERATED BY DEFAULT AS IDENTITY,
   ACU_NUMERO       VARCHAR2(50),
   ACU_TITULAR      VARCHAR2(200),
   ACU_TIPO_CUENTA  VARCHAR2(20),
   ACU_ES_PRINCIPAL NUMBER(1),
   ABA_ID           NUMBER,
   AUS_ID           NUMBER,
   
   CONSTRAINT PK_ACS_CUENTA_BANCARIA PRIMARY KEY (ACU_ID),
   CONSTRAINT UK_ACU_NUMERO UNIQUE (ACU_NUMERO),
   CONSTRAINT CK_ACU_TIPO_CUENTA CHECK (ACU_TIPO_CUENTA IN ('AHORROS', 'CORRIENTE')),
   CONSTRAINT FK_CUENTA_BANCARIA_BANCO FOREIGN KEY (ABA_ID)
      REFERENCES ACS_BANCO (ABA_ID),
   CONSTRAINT FK_CUENTA_BANCARIA_USUARIO FOREIGN KEY (AUS_ID)
      REFERENCES ACS_USUARIO (AUS_ID)
);

-- ! TABLA
CREATE TABLE ACS_MEDICO (
   AME_ID      NUMBER,
   AME_ESTADO  VARCHAR2(20) DEFAULT 'ACTIVO',
   AUS_ID      NUMBER,
   
   CONSTRAINT PK_ACS_MEDICO PRIMARY KEY (AME_ID),
   CONSTRAINT UK_ACS_MEDICO_USUARIO UNIQUE (AUS_ID),
   CONSTRAINT CK_ACS_MEDICO_ESTADO CHECK (AME_ESTADO IN ('ACTIVO', 'INACTIVO')),
   CONSTRAINT FK_MEDICO_USUARIO FOREIGN KEY (AUS_ID)
      REFERENCES ACS_USUARIO (AUS_ID)
);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON COLUMN ACS_MEDICO.AME_ID IS 'EL ID DEL MÉDICO ES EL MISMO QUE EL ID DEL USUARIO ASOCIADO';

-- ! TABLA
CREATE TABLE ACS_ADMINISTRATIVO (
   AAD_ID      NUMBER,
   AAD_ESTADO  VARCHAR2(20) DEFAULT 'ACTIVO',
   AUS_ID      NUMBER,
   
   CONSTRAINT PK_ACS_ADMINISTRATIVO PRIMARY KEY (AAD_ID),
   CONSTRAINT UK_ACS_ADMINISTRATIVO_USR UNIQUE (AUS_ID),
   CONSTRAINT CK_ACS_ADMINISTRATIVO_ESTADO CHECK (AAD_ESTADO IN ('ACTIVO', 'INACTIVO')),
   CONSTRAINT FK_ADMINISTRATIVO_USUARIO FOREIGN KEY (AUS_ID)
      REFERENCES ACS_USUARIO (AUS_ID)
);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON COLUMN ACS_ADMINISTRATIVO.AAD_ID IS 'EL ID DEL ADMINISTRATIVO ES EL MISMO QUE EL ID DEL USUARIO ASOCIADO';

-- ! TABLA
CREATE TABLE ACS_DETALLE_DOCUMENTO (
   ADD_ID                NUMBER GENERATED BY DEFAULT AS IDENTITY,
   ADD_TIPO_USUARIO      VARCHAR2(20),
   ADD_DOCUMENTOS_REQUERIDOS VARCHAR2(4000),
   
   CONSTRAINT PK_ACS_DETALLE_DOCUMENTO PRIMARY KEY (ADD_ID),
   CONSTRAINT UK_ADD_TIPO_USUARIO UNIQUE (ADD_TIPO_USUARIO),
   CONSTRAINT CK_ADD_TIPO_USUARIO CHECK (ADD_TIPO_USUARIO IN ('MEDICO', 'ADMINISTRATIVO'))
);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON TABLE ACS_DETALLE_DOCUMENTO IS 'DOCUMENTOS REQUERIDOS POR TIPO DE USUARIO, SEPARADOS POR COMAS';

-- ! TABLA
CREATE TABLE ACS_DOCUMENTO (
   ADO_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY,
   ADO_URL       VARCHAR2(1000),
   ADO_DESCRIPCION VARCHAR2(4000),
   AUS_ID        NUMBER,

   CONSTRAINT PK_ACS_DOCUMENTO PRIMARY KEY (ADO_ID),
   CONSTRAINT UK_ADO_URL UNIQUE (ADO_URL),
   CONSTRAINT UK_ADO_USUARIO UNIQUE (AUS_ID),
   CONSTRAINT FK_DOCUMENTO_USUARIO FOREIGN KEY (AUS_ID)
      REFERENCES ACS_USUARIO (AUS_ID)
);

-- * COMENTARIOS DESCRIPTIVOS
COMMENT ON TABLE ACS_DOCUMENTO IS 'DOCUMENTOS SUBIDOS POR LOS USUARIOS, RELACIONADOS CON SU';


-- * TRIGGERS
-- CREA EL USUARIO CUANDO EL ESTADO DEL PRERREGISTRO CAMBIA A 'APROBADO', ADEMAS ASIGNA EL PERFIL CORRESPONDIENTE
CREATE OR REPLACE TRIGGER TRG_AFTER_UPDATE_PRERREGISTRO
AFTER UPDATE OF APR_ESTADO_REGISTRO ON ACS_PRERREGISTRO
FOR EACH ROW
DECLARE
   V_NEW_AUS_ID NUMBER;
BEGIN
   IF :NEW.APR_ESTADO_REGISTRO = 'APROBADO' THEN   
      INSERT INTO ACS_USUARIO (
         AUS_CEDULA, AUS_NOMBRE, AUS_APELLIDOS, AUS_FECHA_NACIMIENTO,
         AUS_SEXO, AUS_ESTADO_CIVIL, AUS_TIPO_NACIONALIDAD, AUS_TIPO_USUARIO,
         AUS_EMAIL, AUS_TELEFONO, AUS_RESIDENCIA, AUS_DIRECCION_CASA,
         AUS_DIRECCION_TRABAJO, AUS_FECHA_CREACION
      ) VALUES (
         :NEW.APR_CEDULA, :NEW.APR_NOMBRE, :NEW.APR_APELLIDOS, :NEW.APR_FECHA_NACIMIENTO,
         :NEW.APR_SEXO, :NEW.APR_ESTADO_CIVIL, :NEW.APR_TIPO_NACIONALIDAD, :NEW.APR_TIPO_USUARIO,
         :NEW.APR_EMAIL, :NEW.APR_TELEFONO, :NEW.APR_RESIDENCIA, :NEW.APR_DIRECCION_CASA,
         :NEW.APR_DIRECCION_TRABAJO, SYSDATE
      )
      RETURNING AUS_ID INTO V_NEW_AUS_ID;

      IF :NEW.APR_TIPO_USUARIO = 'MEDICO' THEN
         INSERT INTO ACS_MEDICO (AME_ID, AME_ESTADO, AUS_ID)
         VALUES (V_NEW_AUS_ID, 'ACTIVO', V_NEW_AUS_ID);
      ELSIF :NEW.APR_TIPO_USUARIO = 'ADMINISTRATIVO' THEN
         INSERT INTO ACS_ADMINISTRATIVO (AAD_ID, AAD_ESTADO, AUS_ID)
         VALUES (V_NEW_AUS_ID, 'ACTIVO', V_NEW_AUS_ID);
      END IF;

      DELETE FROM ACS_PRERREGISTRO WHERE APR_ID = :NEW.APR_ID;

   ELSIF :NEW.APR_ESTADO_REGISTRO = 'RECHAZADO' THEN
      DELETE FROM ACS_PRERREGISTRO WHERE APR_ID = :NEW.APR_ID;
   END IF;
END;
/


-- * END MODULO DE PERSONAL *
-- * ------------------
