-- ! TRIGGERS
-- ** CREA EL USUARIO CUANDO EL ESTADO DEL PERSONA CAMBIA A 'APROBADO', ADEMAS ASIGNA EL PERFIL CORRESPONDIENTE **
CREATE OR REPLACE TRIGGER TRG_AFTER_UPDATE_APE_ESR
AFTER UPDATE OF APE_ESTADO_REGISTRO ON ACS_PERSONA
FOR EACH ROW
DECLARE
   V_NEW_AUS_ID NUMBER;
BEGIN
   IF :NEW.APE_ESTADO_REGISTRO = 'APROBADO' THEN   
      INSERT INTO ACS_USUARIO (
         AUS_ID, APE_ID, AUS_FECHA_CREACION
      ) VALUES (
         :NEW.APE_ID, :NEW.APE_ID, SYSDATE
      )
      RETURNING AUS_ID INTO V_NEW_AUS_ID;

      IF :NEW.APE_TIPO_USUARIO = 'MEDICO' THEN
         INSERT INTO ACS_MEDICO (AME_ID, AME_ESTADO, AUS_ID)
         VALUES (V_NEW_AUS_ID, 'ACTIVO', V_NEW_AUS_ID);
      ELSIF :NEW.APE_TIPO_USUARIO = 'ADMINISTRATIVO' THEN
         INSERT INTO ACS_ADMINISTRATIVO (AAD_ID, AAD_ESTADO, AUS_ID)
         VALUES (V_NEW_AUS_ID, 'ACTIVO', V_NEW_AUS_ID);
      END IF;

   ELSIF :NEW.APE_ESTADO_REGISTRO = 'RECHAZADO' THEN
      DELETE FROM ACS_PERSONA WHERE APE_ID = :NEW.APE_ID;
   END IF;
END;
/

-- ** TRIGGER PARA ACTUALIZAR APE_FECHA_ACTUALIZACION EN ACS_PERSONA **
CREATE OR REPLACE TRIGGER TRG_APE_UPDATE
BEFORE UPDATE ON ACS_PERSONA
FOR EACH ROW
BEGIN
   :NEW.APE_FECHA_ACTUALIZACION := SYSDATE;
END;
/

-- ** TRIGGER PARA ACTUALIZAR ADO_FECHA_ACTUALIZACION EN ACS_DOCUMENTO_USUARIO **
CREATE OR REPLACE TRIGGER TRG_ACS_DOU_UPDATE
BEFORE UPDATE ON ACS_DOCUMENTO_USUARIO
FOR EACH ROW
BEGIN
   :NEW.ADO_FECHA_ACTUALIZACION := SYSDATE;
END;

/* 
TODO un trigger que actualice el ultimo acceso del usuario en  planillas, escalas o procedimiento
si hace algun movieminto ahi se actualiza la fecha de ultimo acceso en usuario
en total son 3 triggers, uno para cada tabla
*/